package com.study.myapp.dao;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.util.ArrayList;
import java.util.List;

import javax.sql.DataSource;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.jdbc.core.JdbcTemplate;
import org.springframework.stereotype.Repository;

import com.study.myapp.dto.BoardDTO;

@Repository
public class BoardDAO {
	
	@Autowired
	private JdbcTemplate jdbcTemplate;
	
	public int insert(BoardDTO insertDto) {
		
		String sql = "insert into spring_board(bno, title, content, writer) values(seq_board.nextval,?,?,?)";
		int result = jdbcTemplate.update(sql, insertDto.getTitle(), insertDto.getContent(), insertDto.getWriter());
		
		return result;
	}
	
	
	public List<BoardDTO> select() {
		
		String sql = "select * from spring_board";
		
		return jdbcTemplate.query(sql, new BoardRowMapper());
	}
	
	// update - bno가 일치하면 title, content, updatedate 수정 . *regdate:등록날자 --> 변경필요 X
	public int update(BoardDTO updateDto) {
		
		String sql = "update spring_board set title=?, content=?, updatedate=sysdate where bno=?";
		int result = jdbcTemplate.update(sql,updateDto.getTitle(), updateDto.getContent(), updateDto.getBno());

		return result;
	}
	
	public int delete(int bno) {
		PreparedStatement pstmt = null;
		String sql = "delete from spring_board where bno=?";
		Connection con = null;
		int result = 0;
		try {
			con = ds.getConnection();
			pstmt = con.prepareStatement(sql);
			pstmt.setInt(1, bno);
			
			result = pstmt.executeUpdate();
		} catch (Exception e) {
			e.printStackTrace();
		} finally {
			close(con);
			close(pstmt);
		}
		return result;
	}
	
	public BoardDTO selectOne(int bno) {
		BoardDTO dto = null;
		PreparedStatement pstmt = null;
		Connection con = null;
		ResultSet rs = null;
		String sql = "select * from spring_board where bno=?";
		
		try {
			con = ds.getConnection();
			pstmt = con.prepareStatement(sql);
			pstmt.setInt(1, bno); //하나의 행만 뽑아내주고
			rs = pstmt.executeQuery();
			
			if(rs.next()) { // dto안에 담아주고
				 dto = new BoardDTO();
				 dto.setBno(rs.getInt("bno"));
				 dto.setTitle(rs.getString("title"));
				 dto.setContent(rs.getString("content"));
				 dto.setWriter(rs.getString("writer"));
				 dto.setRegdate(rs.getDate("regdate"));
				 dto.setUpdatedate(rs.getDate("updatedate"));	 
			}
		} catch (Exception e) {
			e.printStackTrace();
		} finally {
			close(pstmt);
			close(con);
			close(rs);
		}
		return dto;
	}
}
